# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---                                           
################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions.
    # Need to create your own active directory implentation for membership service. 
    - &OrdererOrg
        Name: OrdererOrg
        ID: OrdererMSP
        MSPDir: crypto-config/ordererOrganizations/switch2logic.co.za/msp
          # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies: &OrdererOrgPolicies
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('OrdererMSP.admin', 'OrdererMSP.peer')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('OrdererMSP.admin', 'OrdererMSP.client'')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

    - &Hospital1
        Name: Hospital1MSP
        ID: Hospital1MSP
        MSPDir: crypto-config/peerOrganizations/hospital1.switch2logic.co.za/msp
        AnchorPeers:
            - Host: peer0.hospital1.switch2logic.co.za
              Port: 7051

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies: &Hospital1Policies
            Readers:
                Type: Signature
                Rule: "OR('Hospital1MSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('Org1MSP.admin', 'Org1MSP.peer')"
            Writers:
                Type: Signature
                Rule: "OR('Hospital1MSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('Org1MSP.admin', 'Org1MSP.client'')"
            Admins:
                Type: Signature
                Rule: "OR('Hospital1MSP.admin')"             

    - &Hospital2
        Name: Hospital2MSP
        ID: Hospital2MSP
        MSPDir: crypto-config/peerOrganizations/hospital3.switch2logic.co.za/msp
        AnchorPeers:
            - Host: peer0.hospital2.switch2logic.co.za
              Port: 8051

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies: &Hospital2Policies
            Readers:
                Type: Signature
                Rule: "OR('Hospital2MSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('Org1MSP.admin', 'Org1MSP.peer')"
            Writers:
                Type: Signature
                Rule: "OR('Hospital2MSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('Org1MSP.admin', 'Org1MSP.client'')"
            Admins:
                Type: Signature
                Rule: "OR('Hospital2MSP.admin')"               

    - &Hospital3
        Name: Hospital3MSP
        ID: Hospital3MSP
        MSPDir: crypto-config/peerOrganizations/hospital3.switch2logic.co.za/msp
        AnchorPeers:
            - Host: peer0.hospital3.switch2logic.co.za
              Port: 9051  
       # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies: &Hospital3Policies
            Readers:
                Type: Signature
                Rule: "OR('Hospital3MSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('Org1MSP.admin', 'Org1MSP.peer')"
            Writers:
                Type: Signature
                Rule: "OR('Hospital3MSP.member')"
                # If your MSP is configured with the new NodeOUs, you might
                # want to use a more specific rule like the following:
                # Rule: "OR('Org1MSP.admin', 'Org1MSP.client'')"
            Admins:
                Type: Signature
                Rule: "OR('Hospital3MSP.admin')"  

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.  Set the value of the capability to true to require it.
    Global: &ChannelCapabilities
        # V1.1 for Global is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running v1.0.x,
        # but the modification of which would cause incompatibilities.  Users
        # should leave this flag set to true.
        V1_1: true

    Orderer: &OrdererCapabilities
        V1_1: true

    Application: &ApplicationCapabilities
        V1_2: true

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:                     
    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        Org1MemberPolicy:
            Type: Signature
            Rule: "OR('Hospital1MSP.member')"
        Org2MemberPolicy:
            Type: Signature
            Rule: "OR('Hospital2MSP.member')"
        Org3MemberPolicy:
            Type: Signature
            Rule: "OR('Hospital3MSP.member')"    
        Org1Org2MemberPolicy:
            Type: Signature
            Rule: "OR('Hospital1MSP.member','Hospital2MSP.member','Hospital3MSP.member')"

    # Capabilities describes the application level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ApplicationCapabilities
        
################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: solo

    Addresses:
        - orderer.switch2logic.co.za:7050
    BatchTimeout: 2s
    BatchSize:
        MaxMessageCount: 10
        AbsoluteMaxBytes: 99 MB
        PreferredMaxBytes: 512 KB

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - 127.0.0.1:9092

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:
    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

 ################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:

    SingleOrdererHospitalGenesis:
        Capabilities:
            <<: *ChannelCapabilities
        <<: *ChannelDefaults    
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - <<: *OrdererOrg
                  Policies:
                    <<: *OrdererOrgPolicies
                    Admins:
                      Type: Signature
                      Rule: "OR('OrdererMSP.admin')"                
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            HospitalConsortium:
                Organizations:
                - <<: *Hospital1
                  Policies:
                      <<: *Hospital1Policies
                      Admins:
                          Type: Signature
                          Rule: "OR('Hospital2MSP.admin')"
                - <<: *Hospital2
                  Policies:
                      <<: *Hospital2Policies
                      Admins:
                          Type: Signature
                          Rule: "OR('Hospital2MSP.admin')"                   
                - <<: *Hospital3
                  Policies:
                      <<: *Hospital3Policies
                      Admins:
                          Type: Signature
                          Rule: "OR('Hospital3MSP.admin')"
    Comunitychannel:
       Consortium: HospitalConsortium
       Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Hospital1
                - *Hospital2
                - *Hospital3 
            Capabilities:
                <<: *ApplicationCapabilities      
    Hospital2channel:
        Consortium: HospitalConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Hospital1
                - *Hospital2
            Capabilities:
                <<: *ApplicationCapabilities      
    Hospital3channel:
        Consortium: HospitalConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Hospital1
                - *Hospital3 
            Capabilities:
                <<: *ApplicationCapabilities    